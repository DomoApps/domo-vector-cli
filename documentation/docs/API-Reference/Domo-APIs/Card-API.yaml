openapi: 3.0.1
info:
  version: '1.0'
  title: Cards API
  description: |-
    ## Cards API
    The Cards API allows you to view and create Cards within Domo.
servers:
  - url: 'https://api.domo.com'
    description: Domo API
paths:
  /v1/cards:
    get:
      summary: List Cards
      description: Get a list of Cards for which the user has permission. Use `limit` in conjunction with `offset` for pagination.
      operationId: listCards
      parameters:
        - name: limit
          description: Maximum count of Cards to be returned
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 35
        - name: offset
          description: Offset of Cards to skip before returning
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardSummaryList'
        '403':
          description: Forbidden
        '409':
          description: Conflict
      security:
        - oauth2Auth: []
  '/v1/cards/{cardUrn}':
    get:
      summary: Get Card
      description: Retrieves a Card
      operationId: getCard
      parameters:
        - name: cardUrn
          description: ID of Card
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardSummary'
      security:
        - oauth2Auth: []
  /v1/cards/chart:
    post:
      summary: Create Chart Card
      description: Create a new Card to visualize data from an existing DataSet.
      operationId: createChartCard
      parameters:
        - name: pageId
          description: ID of Page (Dashboard) to insert the newly created Card
          in: query
          required: false
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDefinition'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardDefinition'
        '403':
          description: Forbidden
        '409':
          description: Conflict
      security:
        - oauth2Auth: []
  '/v1/cards/chart/{cardUrn}':
    get:
      summary: Get Chart Card Definition
      description: Retrieves the definition for an existing chart Card.
      operationId: getCardDefinition
      parameters:
        - name: cardUrn
          description: ID of Card
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardDefinition'
        '403':
          description: Forbidden
        '409':
          description: Conflict
      security:
        - oauth2Auth: []
    put:
      summary: Update Chart Card Definition
      description: Updates definition of an existing chart Card.
      operationId: updateChartCardDefinition
      parameters:
        - name: cardUrn
          description: ID of Card
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDefinition'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardDefinition'
        '403':
          description: Forbidden
        '409':
          description: Conflict
      security:
        - oauth2Auth: []
  '/v1/cards/chart/{cardUrn}/drill':
    post:
      summary: Add Drill View
      description: Adds a new drill view definition to an existing Card.
      operationId: addDrillView
      parameters:
        - name: cardUrn
          description: ID of Card
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardDefinition'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CardDefinition'
        '403':
          description: Forbidden
        '409':
          description: Conflict
      security:
        - oauth2Auth: []
  '/v1/cards/chart/{cardUrn}/drillpath':
    get:
      summary: Get Drill Properties
      description: Retrieves drill views of a Card.
      operationId: getDrillProperties
      parameters:
        - name: cardUrn
          description: ID of Card
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DrillPathProperties'
        '403':
          description: Forbidden
        '409':
          description: Conflict
      security:
        - oauth2Auth: []
components:
  securitySchemes:
    oauth2Auth:
      type: oauth2
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /oauth/token
  schemas:
    CardSummaryList:
      type: object
      properties:
        cards:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CardSummary'
        totalCardCount:
          type: integer
          nullable: true
          format: int64
    CardSummary:
      type: object
      properties:
        cardTitle:
          type: string
          nullable: true
        cardUrn:
          type: string
          nullable: true
        lastModified:
          type: integer
          nullable: true
          format: int64
        ownerId:
          type: integer
          nullable: true
          format: int64
        ownerName:
          type: string
          nullable: true
        pages:
          type: array
          nullable: true
          items:
            type: integer
            format: int64
        type:
          type: string
          nullable: true
    CardDefinition:
      type: object
      properties:
        calculatedFields:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/CalculatedField'
        chartBody:
          $ref: '#/components/schemas/Component_Nullable'
        chartType:
          type: string
          nullable: true
        chartVersion:
          type: string
          nullable: true
        conditionalFormats:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ConditionalFormat'
        dataSetId:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        goal:
          type: number
          nullable: true
          format: double
        metadataOverrides:
          type: object
          nullable: true
          additionalProperties:
            type: string
        preferredFullHeight:
          type: number
          nullable: true
          format: float
        preferredFullWidth:
          type: number
          nullable: true
          format: float
        quickFilters:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/QuickFilter'
        summaryNumber:
          $ref: '#/components/schemas/Component_Nullable'
        title:
          type: string
          nullable: true
        urn:
          type: string
          nullable: true
    CalculatedField:
      type: object
      properties:
        formula:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        saveToDataSet:
          type: boolean
          nullable: true
    Component_Nullable:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/Component'
    Component:
      type: object
      properties:
        columns:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/DataSetColumn'
        dateGrain:
          $ref: '#/components/schemas/DateGrain_Nullable'
        dateRangeFilter:
          $ref: '#/components/schemas/DateRangeFilter_Nullable'
        distinct:
          type: boolean
          nullable: true
        filters:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Filter'
        fiscal:
          type: boolean
          nullable: true
        groupBy:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/DataSetColumn'
        limit:
          type: integer
          nullable: true
          format: int64
        offset:
          type: integer
          nullable: true
          format: int64
        orderBy:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/DataSetColumn'
        projection:
          type: boolean
          nullable: true
    DataSetColumn:
      type: object
      properties:
        aggregation:
          type: string
          nullable: true
        alias:
          type: string
          nullable: true
        calendar:
          type: boolean
          nullable: true
        column:
          type: string
          nullable: true
        format:
          $ref: '#/components/schemas/ColumnFormat_Nullable'
        mapping:
          type: string
          nullable: true
        order:
          type: string
          nullable: true
          enum:
            - ASCENDING
            - DESCENDING
            - null
    ColumnFormat_Nullable:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/ColumnFormat'
    ColumnFormat:
      type: object
      properties:
        alignment:
          type: string
          nullable: true
        commas:
          type: boolean
          nullable: true
        currency:
          type: string
          nullable: true
        dateFormat:
          type: string
          nullable: true
        format:
          type: string
          nullable: true
        percent:
          type: boolean
          nullable: true
        percentMultiplied:
          type: boolean
          nullable: true
        precision:
          type: integer
          nullable: true
          format: int32
        style:
          type: string
          nullable: true
        tableColumn:
          $ref: '#/components/schemas/TableColumn_Nullable'
        type:
          type: string
          nullable: true
    TableColumn_Nullable:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/TableColumn'
    TableColumn:
      type: object
      properties:
        aggregation:
          type: string
          nullable: true
        hideSubtotal:
          type: boolean
          nullable: true
        hideTotal:
          type: boolean
          nullable: true
        percentOfTotal:
          type: boolean
          nullable: true
        width:
          type: integer
          nullable: true
          format: int32
    DateGrain_Nullable:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/DateGrain'
    DateGrain:
      type: object
      properties:
        column:
          type: string
          nullable: true
        dateTimeElement:
          type: string
          nullable: true
    DateRangeFilter_Nullable:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/DateRangeFilter'
    DateRangeFilter:
      type: object
      allOf:
        - $ref: '#/components/schemas/QueryFilter'
        - type: object
          properties:
            field:
              type: string
              nullable: true
            from:
              type: integer
              nullable: true
              format: int64
            not:
              type: boolean
              nullable: true
            to:
              type: integer
              nullable: true
              format: int64
    QueryFilter:
      type: object
      properties:
        filterType:
          type: string
      required:
        - filterType
      discriminator:
        propertyName: filterType
    Filter:
      type: object
      properties:
        column:
          type: string
          nullable: true
        operand:
          type: string
          nullable: true
        values:
          type: array
          nullable: true
          items:
            type: string
    ConditionalFormat:
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/Filter_Nullable'
        format:
          $ref: '#/components/schemas/Format_Nullable'
        savedToDataSet:
          type: boolean
          nullable: true
    Filter_Nullable:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/Filter'
    Format_Nullable:
      nullable: true
      allOf:
        - $ref: '#/components/schemas/Format'
    Format:
      type: object
      properties:
        applyToRow:
          type: boolean
          nullable: true
        color:
          type: string
          nullable: true
        textColor:
          type: string
          nullable: true
        textStyle:
          type: string
          nullable: true
    QuickFilter:
      type: object
      properties:
        column:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        operator:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        values:
          type: array
          nullable: true
          items:
            type: string
    DrillPathProperties:
      type: object
      properties:
        allowTableDrill:
          type: boolean
          nullable: true
        drillOrder:
          type: array
          nullable: true
          items:
            type: string
security:
  - oauth2Auth: []
