openapi: 3.1.0
x-stoplight:
  id: w8dk0f75hetfk
info:
  title: Account API
  version: '1.0'
  description: "## The Account Object\nThe Account API allows you to create, update, validate and share accounts in Domo. If you would like to manage a large number of accounts at scale from agencies or other 3rd party vendors that you currently manage individually through the Data Center in Domo, the Accounts API makes that possible.\n\n<!-- theme: info -->\n> ### Note\n>\n>The Accounts API will only return information for accounts you own or for accounts that have been shared with you in Domo.\n\n## Account Attributes\n| Property Name | Type | Description |\n| --- | --- | --- |\n| id | String |\tThe ID of the Account |\n| name | String\t| The name of the Account |\n| type | Object\t| The type of the Account |\n| valid\t| Boolean | Indicates if the Account needs to be re-authorized or not |\n\n## Account's Type Attributes\n| Property Name | Type | Description |\n| --- | --- | --- |\n| id | String | The ID of the Account Type |\n| name | String | The name of the Account Type |\n| templates | Object | The Template that defines the properties required to create an Account of this type |\n\n## Account Type's Template Attributes\n| Property Name | Type | Description |\n| --- | --- | --- |\n| title\t| String | The title of the Template |\n| contentType | String | The content-type header when sending the request to create an Account |\n| method | String | The HTTP method used when creating the Account |\n| properties | Array | The properties available to be sent when creating an Account |\n| name | String\t| The name of the Account Type |\n| templates | Object |The Template that defines the properties required to create an Account of this type |\n\n## Account Share Attributes\n| Property Name | Type | Description |\n| --- | --- | --- |\n| user\t| Object | The User to share the Account with. Only the User's id attribute is required. See the Users API for more information |\n\n"
servers:
  - url: 'https://api.domo.com'
    description: Domo API
paths:
  /v1/accounts:
    parameters: []
    get:
      summary: List Accounts
      tags: []
      operationId: ''
      description: Get a list of all Accounts for which the user has permissions.
      parameters:
        - schema:
            type: number
          in: query
          name: limit
          description: The number of Accounts to return in the list. The default is 50 and the maximum is 500.
        - schema:
            type: number
          in: query
          name: offset
          description: The offset of Accounts to begin the list of Accounts within the response.
      responses:
        '200':
          description: Returns all Accounts objects that meet argument criteria from original request.
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  valid:
                    type: boolean
                  type:
                    type: object
                    properties:
                      id:
                        type: string
                      properties:
                        type: object
                        properties: {}
                x-examples:
                  Example 1:
                    id: '88'
                    name: Leonhard Euler's Account
                    valid: true
                    type:
                      id: xyz
                      properties: {}
    post:
      summary: Create an Account
      operationId: post-v1-accounts
      responses:
        '200':
          description: Returns an Account object when successful. The returned object will not contain any properties within the Account Type object .
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  valid:
                    type: boolean
                  type:
                    type: object
                    properties:
                      id:
                        type: string
                      properties:
                        type: object
                        properties: {}
                x-examples:
                  Example 1:
                    id: '88'
                    name: Leonhard Euler's Account
                    valid: true
                    type:
                      id: xyz
                      properties: {}
      description: |-
        When creating an Account, you must specify the Account Type properties. The Account Type properties are different, depending on the type of Account you are trying to create.

        To retrieve which Account Type properties to specify, use the GET /v1/accounts/account-types/{ACCOUNT_TYPE_ID} endpoint.
      parameters:
        - schema:
            type: string
          in: query
          name: name
          description: The name of the Account
        - schema:
            type: array
          in: query
          name: type
          description: The Account Type object indicating the type of Account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                type:
                  type: object
                  properties:
                    id:
                      type: string
                    properties:
                      type: object
                      properties:
                        password:
                          type: string
                        authenticateBy:
                          type: string
                        url:
                          type: string
                        username:
                          type: string
              x-examples:
                Example 1:
                  name: Leonhard Euler's XYZ Account
                  type:
                    id: xyz
                    properties:
                      password: cyclops
                      authenticateBy: PASSWORD
                      url: 'https://mathematicians.xyz.com'
                      username: leonhard.euler@mathematicians.com
  '/v1/accounts/{ACCOUNT_ID}':
    parameters:
      - schema:
          type: string
        name: ACCOUNT_ID
        in: path
        required: true
        description: The ID of the Account
    get:
      summary: Retrieve an Account
      description: Retrieves the details of an existing account.
      operationId: ''
      responses:
        '200':
          description: 'Returns an Account object if a valid Account ID was provided. When requesting, the Account Type object will not contain any properties.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  valid:
                    type: boolean
                  type:
                    type: object
                    properties:
                      id:
                        type: string
                      properties:
                        type: object
                        properties: {}
                x-examples:
                  Example 1:
                    id: '88'
                    name: Leonhard Euler's Account
                    valid: true
                    type:
                      id: xyz
                      properties: {}
    patch:
      summary: Update an Account
      operationId: ''
      responses:
        '200':
          description: Returns the updated Account.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  valid:
                    type: boolean
                  type:
                    type: object
                    properties:
                      id:
                        type: string
                      properties:
                        type: object
                        properties: {}
                x-examples:
                  Example 1:
                    id: '88'
                    name: Leonhard Euler's Account
                    valid: true
                    type:
                      id: xyz
                      properties: {}
      description: Updates the specified Account’s metadata as well as the Account’s Type properties.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  name: Leonhard Euler's Account
                  type:
                    id: xyz
                    properties:
                      password: mathematician
                      authenticateBy: PASSWORD
                      url: 'https://mathematicians.xyz.com'
                      username: leonhard.euler@mathematicians.com
              properties:
                name:
                  type: string
                type:
                  type: object
                  properties:
                    id:
                      type: string
                    properties:
                      type: object
                      properties:
                        password:
                          type: string
                        authenticateBy:
                          type: string
                        url:
                          type: string
                        username:
                          type: string
                  required:
                    - id
    delete:
      summary: Delete an Account
      operationId: ''
      responses:
        '200':
          description: Returns an empty response.
      description: |-
        Deletes an Account from your Domo instance.

        <!-- theme: danger -->

        > #### Warning
        >
        > This is destructive and cannot be reversed.
  /v1/account-types:
    parameters: []
    get:
      summary: List Account Types
      tags: []
      operationId: ''
      description: Get a list of all Account Types for which the user has permissions.
      parameters:
        - schema:
            type: number
          in: query
          name: limit
          description: The number of Account Types to return in the list. The default is 50 and the maximum is 500.
        - schema:
            type: number
          in: query
          name: offset
          description: The offset of the Account Types to begin list of Account Types within the response.
      responses:
        '200':
          description: Returns all Account Type objects that meet argument criteria from original request.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                x-examples:
                  Example 1:
                    - id: basecamp
                      name: Basecamp
  '/v1/account-types/{ACCOUNT_TYPE_ID}':
    parameters:
      - schema:
          type: string
        name: ACCOUNT_TYPE_ID
        in: path
        required: true
        description: The ID of the Account Type
    get:
      summary: Get Account Type
      tags: []
      operationId: ''
      description: Retrieve the details of an account type. This includes information on the properties required to create an Account of this type.
      parameters: []
      responses:
        '200':
          description: Returns an Account Type object if valid Account Type ID was provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  _templates:
                    type: object
                    properties:
                      default:
                        type: object
                        properties:
                          title:
                            type: string
                          contentType:
                            type: string
                          method:
                            type: string
                          key:
                            type: string
                          properties:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                prompt:
                                  type: string
                                required:
                                  type: boolean
                x-examples:
                  Example 1:
                    id: xyz
                    name: XYZ
                    _templates:
                      default:
                        title: Create XYZ Account
                        contentType: application/json
                        method: post
                        key: default
                        properties:
                          - name: username
                            prompt: Username
                            required: true
                          - name: authenticateBy
                            prompt: Authenticate By
                            regex: '{}'
                            required: true
                          - name: password
                            prompt: Secret
                            required: true
                          - name: endpoint
                            prompt: XYZ URL
                            required: true
  '/v1/accounts/{ACCOUNT_ID}/shares':
    parameters:
      - schema:
          type: string
        name: ACCOUNT_ID
        in: path
        required: true
        description: The ID of the Account
    get:
      summary: Share Account
      tags: []
      operationId: ''
      description: Share an Account with a User.
      parameters:
        - schema:
            type: array
          in: query
          name: user
          description: The User to share the Account with
          required: true
      responses:
        '200':
          description: No Content
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    id:
                      type: integer
              x-examples:
                Example 1:
                  user:
                    id: 1
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
