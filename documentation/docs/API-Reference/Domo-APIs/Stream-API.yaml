openapi: 3.1.0
x-stoplight:
  id: lw7cqi3lqufah
info:
  title: Stream API
  version: '1.0'
  description: |
    The Stream API allows you to automate the creation of new DataSets in your Domo Warehouse, featuring an accelerated upload Stream. A Domo Stream expedites uploads by dividing your data into parts, and uploading all of these parts simultaneously.

    <!-- theme: info -->
    > ### Best Practices
    >
    > This API should be used to create and update massive, constantly changing, or rapidly growing DataSets. For creating and updating smaller DataSets that occasionally need data updated, leverage the DataSet API. 


    ## The Stream Object

    ## Stream Attributes
    Property Name | Type | Description
    ------- | ------- | -------
    id | Number | ID of the Stream
    modifiedAt | String | An ISO-8601 representation of the time the Stream was last updated
    updateMethod | String | The data import behavior
    createdAt | String | An ISO-8601 representation of the create date of the Stream

    ### Stream's DataSet Attributes
    Property Name | Type | Description
    ------- | ------- | -------
    id | String  | The UID of the DataSet associated to the Stream
    name | String | The description of the DataSet associated to the Stream
    description | String | The ID of the DataSet associated to the Stream
    rows | Number | The number of rows in the DataSet
    columns | Number | The number of columns in the DataSet's schema
    owner_id | Number | The ID of the owner of the Stream's underlying DataSet
    owner_name | String | The name of the owner of the Stream's underlying DataSet
    pdpEnabled | Boolean | Indicates if PDP [Personalized Data Permission] policy filtering on data is active on this DataSet
servers:
  - url: 'https://api.domo.com'
    description: Domo API
paths:
  '/v1/streams/{STREAM_ID}':
    parameters:
      - schema:
          type: number
        name: STREAM_ID
        in: path
        required: true
        description: The ID of the Stream
    get:
      summary: Retrieve a Stream
      tags: []
      operationId: ''
      description: Retrieves the details of an existing stream.
      parameters:
        - schema:
            type: string
          in: query
          name: fields
          description: 'Return desired fields: {all} or {id, dataset, updateMethod, createdAt, or modifiedAt}'
      responses:
        '200':
          description: 'Returns a Stream object if valid Stream ID was provided. When requesting, if the Stream ID is related to a DataSet that has been deleted, a subset of the Stream''s information will be returned, including a deleted property, which will be true.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  dataSet:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      rows:
                        type: integer
                      columns:
                        type: integer
                      owner:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      pdpEnabled:
                        type: boolean
                  updateMethod:
                    type: string
                  createdAt:
                    type: string
                  modifiedAt:
                    type: string
                x-examples:
                  Example 1:
                    id: 42
                    dataSet:
                      id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                      name: Leonhard Euler Party
                      description: Mathematician Guest List
                      rows: 0
                      columns: 0
                      owner:
                        id: 27
                        name: DomoSupport
                      createdAt: '2016-05-27T17:53:04Z'
                      updatedAt: '2016-05-26T21:03:35Z'
                      pdpEnabled: false
                    updateMethod: APPEND
                    createdAt: '2016-05-26T21:03:35Z'
                    modifiedAt: '2016-05-26T21:03:35Z'
              examples:
                Example 1:
                  value:
                    id: 42
                    dataSet:
                      id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                      name: Leonhard Euler Party
                      description: Mathematician Guest List
                      rows: 0
                      columns: 0
                      owner:
                        id: 27
                        name: DomoSupport
                      createdAt: '2016-05-27T17:53:04Z'
                      updatedAt: '2016-05-26T21:03:35Z'
                      pdpEnabled: false
                    updateMethod: APPEND
                    createdAt: '2016-05-26T21:03:35Z'
                    modifiedAt: '2016-05-26T21:03:35Z'
    patch:
      summary: Update a Stream
      operationId: ''
      description: Updates the specified Streamâ€™s metadata by providing values to parameters passed.
      parameters:
        - schema:
            type: string
          in: query
          name: updateMethod
          description: The data import behavior
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                updateMethod:
                  type: string
              x-examples:
                Example 1:
                  updateMethod: REPLACE
            examples:
              Example 1:
                value:
                  updateMethod: REPLACE
      responses:
        '200':
          description: Returns a full DataSet object of the Stream.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  dataSet:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      rows:
                        type: integer
                      columns:
                        type: integer
                      owner:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      pdpEnabled:
                        type: boolean
                  updateMethod:
                    type: string
                  createdAt:
                    type: string
                  modifiedAt:
                    type: string
                x-examples:
                  Example 1:
                    id: 42
                    dataSet:
                      id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                      name: Leonhard Euler Party
                      description: Mathematician Guest List
                      rows: 0
                      columns: 0
                      owner:
                        id: 27
                        name: DomoSupport
                      createdAt: '2016-05-27T17:53:04Z'
                      updatedAt: '2016-05-27T17:53:10Z'
                      pdpEnabled: false
                    updateMethod: REPLACE
                    createdAt: '2016-05-27T17:53:05Z'
                    modifiedAt: '2016-05-27T17:53:05Z'
              examples:
                Example 1:
                  value:
                    id: 42
                    dataSet:
                      id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                      name: Leonhard Euler Party
                      description: Mathematician Guest List
                      rows: 0
                      columns: 0
                      owner:
                        id: 27
                        name: DomoSupport
                      createdAt: '2016-05-27T17:53:04Z'
                      updatedAt: '2016-05-27T17:53:10Z'
                      pdpEnabled: false
                    updateMethod: REPLACE
                    createdAt: '2016-05-27T17:53:05Z'
                    modifiedAt: '2016-05-27T17:53:05Z'
    delete:
      summary: Delete a Stream
      operationId: ''
      responses:
        '200':
          description: Returns a Stream object and parameter of success or error based on whether the Stream ID being valid.
      description: |-
        Deletes a Stream from your Domo instance. This does not a delete the associated DataSet.

        <!-- theme: danger -->
        > #### Warning
        >
        > This is destructive and cannot be reversed.
  /v1/streams:
    post:
      summary: Create a Stream
      operationId: ''
      description: |-
        When creating a Stream, specify the DataSet properties (name and description) and as a convenience, the create Stream API will create a DataSet for you.

        Streams support both append and replace import methods, as well as Upsert. In order to create an Upsert dataset you must specify the Upsert key column(s) in keyColumnNames and set updateMethod to APPEND.

        <!-- theme: info -->
        > ### Known Limitation
        >
        > The StreamAPI currently only allows you to import data to a DataSet created via the Stream API. For example, it is currently not supported to import data to a DataSet created by a Domo Connector.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  dataSet:
                    name: Leonhard Euler Party
                    description: Mathematician Guest List
                    schema:
                      columns:
                        - type: STRING
                          name: Friend
                        - type: STRING
                          name: Attending
                  updateMethod: APPEND
              required:
                - dataSet
              properties:
                dataSet:
                  type: object
                  description: The Dataset object to be created with the Stream
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    schema:
                      type: object
                      properties:
                        columns:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                              name:
                                type: string
                updateMethod:
                  type: string
                  description: 'The data import behavior: "APPEND" or "REPLACE"'
                keyColumnNames:
                  type: array
                  description: '`keyColumnNames` defines the upsert key for upsert Datasets.'
                  items:
                    type: string
            examples:
              Example 1:
                value:
                  dataSet:
                    name: Leonhard Euler Party
                    description: Mathematician Guest List
                    schema:
                      columns:
                        - type: STRING
                          name: Friend
                        - type: STRING
                          name: Attending
                  updateMethod: APPEND
      responses:
        '200':
          description: Returns a DataSet object when successful. The returned object will have DataSet attributes based on the information that was provided when DataSet was created from the Stream created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  dataSet:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      description:
                        type: string
                      rows:
                        type: integer
                      columns:
                        type: integer
                      owner:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      pdpEnabled:
                        type: boolean
                  updateMethod:
                    type: string
                  createdAt:
                    type: string
                  modifiedAt:
                    type: string
                x-examples:
                  Example 1:
                    id: 42
                    dataSet:
                      id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                      name: Leonhard Euler Party
                      description: Mathematician Guest List
                      rows: 0
                      columns: 0
                      owner:
                        id: 27
                        name: DomoSupport
                      createdAt: '2016-05-27T17:53:04Z'
                      updatedAt: '2016-05-27T17:53:10Z'
                      pdpEnabled: false
                    updateMethod: APPEND
                    createdAt: '2016-05-27T17:53:05Z'
                    modifiedAt: '2016-05-27T17:53:05Z'
              examples:
                Example 1:
                  value:
                    id: 42
                    dataSet:
                      id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                      name: Leonhard Euler Party
                      description: Mathematician Guest List
                      rows: 0
                      columns: 0
                      owner:
                        id: 27
                        name: DomoSupport
                      createdAt: '2016-05-27T17:53:04Z'
                      updatedAt: '2016-05-27T17:53:10Z'
                      pdpEnabled: false
                    updateMethod: APPEND
                    createdAt: '2016-05-27T17:53:05Z'
                    modifiedAt: '2016-05-27T17:53:05Z'
    parameters: []
    get:
      summary: List Streams
      operationId: ''
      responses:
        '200':
          description: Returns all Stream objects that meet argument criteria from original request.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    dataSet:
                      type: object
                      properties:
                        id:
                          type: string
                        pdpEnabled:
                          type: boolean
                    updateMethod:
                      type: string
                    createdAt:
                      type: string
                    modifiedAt:
                      type: string
                x-examples:
                  Example 1:
                    - id: 1
                      dataSet:
                        id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                        pdpEnabled: false
                      updateMethod: APPEND
                      createdAt: '2016-05-26T21:03:35Z'
                      modifiedAt: '2016-05-26T21:03:35Z'
              examples:
                Example 1:
                  value:
                    - id: 1
                      dataSet:
                        id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                        pdpEnabled: false
                      updateMethod: APPEND
                      createdAt: '2016-05-26T21:03:35Z'
                      modifiedAt: '2016-05-26T21:03:35Z'
      description: Get a list of all Streams for which the user has view permissions.
      parameters:
        - schema:
            type: number
          in: query
          name: limit
          description: The amount of Stream to return in the list. The default is 50 and the maximum is 500.
        - schema:
            type: number
          in: query
          name: offset
          description: The offset of the Stream ID to begin list of users within the response.
  /v1/streams/search:
    parameters: []
    get:
      summary: Search Streams
      operationId: ''
      responses:
        '200':
          description: Returns all Stream objects that meet argument criteria from original request.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    dataSet:
                      type: object
                      properties:
                        id:
                          type: string
                        pdpEnabled:
                          type: boolean
                    updateMethod:
                      type: string
                    createdAt:
                      type: string
                    modifiedAt:
                      type: string
                x-examples:
                  Example 1:
                    - id: 42
                      dataSet:
                        id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                        pdpEnabled: false
                      updateMethod: APPEND
                      createdAt: '2016-05-26T21:03:35Z'
                      modifiedAt: '2016-05-26T21:03:35Z'
              examples:
                Example 1:
                  value:
                    - id: 42
                      dataSet:
                        id: 0c1e0dbe-9f71-4625-9b50-b79e6e4266f2
                        pdpEnabled: false
                      updateMethod: APPEND
                      createdAt: '2016-05-26T21:03:35Z'
                      modifiedAt: '2016-05-26T21:03:35Z'
      description: Returns all Stream objects that meet argument criteria from original request.
      parameters:
        - schema:
            type: string
            example: 'q=dataSource.id:1831cadd-9426-4dc0-ae02-cf2a0a89e70f'
          in: query
          name: q
          description: 'The search qualifiers to search by available qualifiers: dataSource.id or dataSource.owner.id'
          required: true
        - schema:
            type: string
          in: query
          name: fields
          description: 'Return desired fields: {all} or {id, dataset, updateMethod, createdAt, or modifiedAt}'
  '/v1/streams/{STREAM_ID}/executions/{EXECUTION_ID}':
    parameters:
      - schema:
          type: number
        name: STREAM_ID
        in: path
        required: true
        description: The ID of the Stream of data being imported into a DataSet
      - schema:
          type: number
        name: EXECUTION_ID
        in: path
        required: true
        description: The ID of the Stream execution within the Stream
    get:
      summary: Retrieve a Stream execution
      operationId: ''
      responses:
        '200':
          description: Returns a subset fields of a Stream's object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  startedAt:
                    type: string
                  currentState:
                    type: string
                  createdAt:
                    type: string
                  modifiedAt:
                    type: string
                x-examples:
                  Example 1:
                    id: 1
                    startedAt: '2016-05-26T22:20:21Z'
                    currentState: ACTIVE
                    createdAt: '2016-05-26T22:20:21Z'
                    modifiedAt: '2016-05-26T22:20:21Z'
              examples:
                Example 1:
                  value:
                    id: 1
                    startedAt: '2016-05-26T22:20:21Z'
                    currentState: ACTIVE
                    createdAt: '2016-05-26T22:20:21Z'
                    modifiedAt: '2016-05-26T22:20:21Z'
      description: |
        Import data into a DataSet in your Domo instance. This request will replace the data currently in the DataSet.

        <!-- theme: info -->
        > ### Known Limitation
        >
        > The only supported content type is currently CSV format.

        <!-- theme: info -->
        > ### Best Practice
        >
        > To upload data in CSV format, the Domo specification used for representing data grids in CSV format closely follows the RFC standard for CSV (RFC-4180). For more details on correct CSV formatting, click here.
      parameters: []
  '/v1/streams/{STREAM_ID}/executions':
    parameters:
      - schema:
          type: number
        name: STREAM_ID
        in: path
        required: true
        description: The ID of the Stream
    post:
      summary: Create a Stream execution
      operationId: ''
      description: |
        When youâ€™re ready to upload data to your DataSet via a Stream, you first tell Domo that youâ€™re ready to start sending data by creating an Execution.
      responses:
        '200':
          description: Returns a subset of the stream object.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  startedAt:
                    type: string
                  currentState:
                    type: string
                  createdAt:
                    type: string
                  modifiedAt:
                    type: string
                x-examples:
                  Example 1:
                    id: 1
                    startedAt: '2016-05-26T22:20:21Z'
                    currentState: ACTIVE
                    createdAt: '2016-05-26T22:20:21Z'
                    modifiedAt: '2016-05-26T22:20:21Z'
              examples:
                Example 1:
                  value:
                    id: 1
                    startedAt: '2016-05-26T22:20:21Z'
                    currentState: ACTIVE
                    createdAt: '2016-05-26T22:20:21Z'
                    modifiedAt: '2016-05-26T22:20:21Z'
    get:
      summary: List Stream executions
      operationId: ''
      responses:
        '200':
          description: Returns a subset of the Stream execution object from the specified Stream.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    startedAt:
                      type: string
                    currentState:
                      type: string
                    createdAt:
                      type: string
                    modifiedAt:
                      type: string
                x-examples:
                  Example 1:
                    - id: 1
                      startedAt: '2016-05-26T22:20:21Z'
                      currentState: ACTIVE
                      createdAt: '2016-05-26T22:20:21Z'
                      modifiedAt: '2016-05-26T22:20:21Z'
              examples:
                Example 1:
                  value:
                    - id: 1
                      startedAt: '2016-05-26T22:20:21Z'
                      currentState: ACTIVE
                      createdAt: '2016-05-26T22:20:21Z'
                      modifiedAt: '2016-05-26T22:20:21Z'
      description: Returns all Stream Execution objects that meet argument criteria from original request.
      parameters:
        - schema:
            type: number
          in: query
          name: limit
          description: The amount of Stream to return in the list. The default is 50 and the maximum is 500.
        - schema:
            type: number
          in: query
          name: offset
          description: The offset of the Stream ID to begin list of users within the response.
  '/v1/streams/{STREAM_ID}/executions/{EXECUTION_ID}/part/{PART_ID}':
    parameters:
      - schema:
          type: number
        name: STREAM_ID
        in: path
        required: true
        description: The ID of the Stream of data being imported into a DataSet
      - schema:
          type: number
        name: EXECUTION_ID
        in: path
        required: true
        description: The ID of the Stream execution within the Stream
      - schema:
          type: number
        name: PART_ID
        in: path
        required: true
        description: The ID of the data part being used to upload a subset of data within the Stream execution
    put:
      summary: Upload a data part
      operationId: put-v1-streams-STREAM_ID-executions---copy
      responses:
        '200':
          description: Returns a subset of a stream object and a parameter of success or error based on whether the data part within the stream execution being successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  startedAt:
                    type: string
                  currentState:
                    type: string
                  createdAt:
                    type: string
                  modifiedAt:
                    type: string
                x-examples:
                  Example 1:
                    id: 1
                    startedAt: '2016-06-16T17:54:02Z'
                    currentState: ACTIVE
                    createdAt: '2016-06-16T17:54:01Z'
                    modifiedAt: '2016-06-16T17:54:02Z'
              examples:
                Example 1:
                  value:
                    id: 1
                    startedAt: '2016-06-16T17:54:02Z'
                    currentState: ACTIVE
                    createdAt: '2016-06-16T17:54:01Z'
                    modifiedAt: '2016-06-16T17:54:02Z'
      description: |
        Creates a data part within the Stream execution to upload chunks of rows to the DataSet. The calling client should keep track of parts and order them accordingly in an increasing sequence. If a part upload fails, retry the upload as all parts must be present before committing the stream execution.

        <!-- theme: info -->
        > ### Best Practice
        >
        > Parts can be uploaded simultaneously in separate threads assuming that each part has a distinct part ID and is ordered correctly. To reduce upload time, compress each data as a gzip file (application/gzip).
  '/v1/streams/{STREAM_ID}/executions/{EXECUTION_ID}/commit':
    parameters:
      - schema:
          type: number
        name: STREAM_ID
        in: path
        required: true
        description: The ID of the Stream of data being imported into a DataSet
      - schema:
          type: number
        name: EXECUTION_ID
        in: path
        required: true
        description: The ID of the Stream execution within the Stream
    put:
      summary: Commit a Stream execution
      operationId: ''
      responses:
        '200':
          description: Returns a subset of a stream object and a parameter of success or error based on whether the stream execution successfully committed to Domo.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  startedAt:
                    type: string
                  currentState:
                    type: string
                  createdAt:
                    type: string
                  modifiedAt:
                    type: string
                x-examples:
                  Example 1:
                    id: 1
                    startedAt: '2016-05-27T15:16:01Z'
                    currentState: ACTIVE
                    createdAt: '2016-05-27T15:15:59Z'
                    modifiedAt: '2016-05-27T15:15:59Z'
              examples:
                Example 1:
                  value:
                    id: 1
                    startedAt: '2016-05-27T15:16:01Z'
                    currentState: ACTIVE
                    createdAt: '2016-05-27T15:15:59Z'
                    modifiedAt: '2016-05-27T15:15:59Z'
      description: |
        Commits stream execution to import combined set of data parts that have been successfully uploaded.

        <!-- theme: info -->
        > ### Known Limitation
        >
        > By default, the Stream API only supports the ability to execute a commit every 15 minutes. For valid use cases, contact Domo Support if you would like to execute commits more frequently than 15 minutes.
  '/v1/streams/{STREAM_ID}/executions/{EXECUTION_ID}/abort':
    parameters:
      - schema:
          type: number
        name: STREAM_ID
        in: path
        required: true
        description: The ID of the Stream of data being imported into a DataSet
      - schema:
          type: number
        name: EXECUTION_ID
        in: path
        required: true
        description: 'The ID of the Stream execution within the Stream, if no Stream execution ID is provided, the current Stream execution will be aborted'
    put:
      summary: Abort a Stream execution
      operationId: ''
      responses:
        '200':
          description: Returns a parameter of success or error based on whether the Stream ID being valid.
      description: |
        If needed during an execution, aborts an entire Stream execution.

        <!-- theme: info -->
        > ### Best Practice
        >
        > To abort the current stream execution within a Stream, simply identify the Streamâ€™s ID within request
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
