openapi: 3.1.0
x-stoplight:
  id: gcl6cvkh1x5nk
info:
  title: Page API
  version: '1.0'
  description: |-
    ### The page object

    The page object is a screen where you can view a “collection” of data, which is typically displayed in cards. You use a page to organize, manage, and share content to other users in Domo. Pages allow you to send external reports, create holistic filters across all metrics within the page, or have conversations in Domo’s Buzz tool about the data associated to the entire page.  The Page API allows you to create, delete,  retrieve a page or a list of pages, and update page information and content within a page.

    #### Attributes

    Property Name | Type | Description
    ------- | ------- | -------
    name | String | The name of the page
    id | String | The ID of the page
    parentId | Long | The ID of the page that is higher in organizational hierarchy 
    owners | Array of objects | List of IDs of page owners
    locked | Boolean | Determines whether users (besides the page owner) can make updates to page or its content - the default value is false
    collectionIds | Long | The IDs of collections within a page
    cardIds | Long | The ID of all cards contained within the page
    children | Object | All pages that are considered "sub pages" in organizational hierarchy
    visibility | Object | Determines the access given to both individual users or groups within Domo
    userIds | Long | The ID of the page
    groupIds | Long | The ID of the page
servers:
  - url: 'https://api.domo.com'
    description: Domo API
paths:
  '/v1/pages/{page_id}':
    parameters:
      - schema:
          type: string
          example: '876655018'
        name: page_id
        in: path
        required: true
        description: The ID of the page
    get:
      summary: Retrieve a page
      tags: []
      operationId: get-v1-pages-page_id
      description: Retrieves the details of an existing page.
      responses:
        '200':
          description: Returns a page object if valid page ID was provided.
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    id: 421696155
                    parentId: 1507324998
                    owners: [{"id":8811501, "type":"USER", "displayName": "John Smith"}]
                    name: Custom Maps
                    locked: false
                    collectionIds: []
                    cardIds:
                      - 606665948
                      - 917562931
                      - 1240307199
                      - 911423588
                    visibility:
                      userIds:
                        - 8811501
                      groupIds: []
                    owners:
                      - id: 8811501
                        type: USER
                        displayName: Noah Finberg
                properties:
                  id:
                    type: integer
                    description: The ID of the page
                  parentId:
                    type: integer
                    description: The ID of the page that is higher in organizational hierarchy
                  name:
                    type: string
                    description: The name of the page
                  locked:
                    type: boolean
                    description: Determines whether users (besides the page owner) can make updates to page or its content - the default value is false
                  collectionIds:
                    type: array
                    description: The IDs of collections within a page
                    items:
                      type: object
                  cardIds:
                    type: array
                    description: The ID of all cards contained within the page
                    items:
                      type: integer
                  visibility:
                    type: object
                    description: Determines the access given to both individual users or groups within Domo
                    properties:
                      userIds:
                        type: array
                        items:
                          type: integer
                      groupIds:
                        type: array
                        items:
                          type: object
                  owners:
                    type: array
                    description: List of IDs of page owners
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                        displayName:
                          type: string
              examples:
                Example 1:
                  value:
                    id: 421696155
                    parentId: 1507324998
                    owners: [{"id":8811501, "type":"USER", "displayName": "John Smith"}]
                    name: Custom Maps
                    locked: false
                    collectionIds: []
                    cardIds:
                      - 606665948
                      - 917562931
                      - 1240307199
                      - 911423588
                    visibility:
                      userIds:
                        - 8811501
                      groupIds: []
                    owners:
                      - id: 8811501
                        type: USER
                        displayName: Noah Finberg
    put:
      summary: Update a page
      operationId: put-v1-pages-page_id
      responses:
        '200':
          description: Returns the parameter of success or error based on the page ID being valid.
      description: |-
        Updates the specified page by providing values to parameters passed. Any parameter left out of the request will cause the specific page’s attribute to remain unchanged.

        > Also, collections cannot be added or removed via this endpoint, only reordered. Giving access to a user or group will also cause that user or group to have access to the parent page (if the page is a subpage). Moving a page by updating the parentId will also cause everyone with access to the page to have access to the new parent page.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: integer
                  description: ID of page that needs to be updated
                name:
                  type: string
                  description: Will update the name of the page
                owners:
                  type: array
                  description: Will update the owners of the page
                parentId:
                  type: integer
                  description: 'If provided, will either make the page a subpage or simply move the subpage to become a child of a different parent page'
                locked:
                  type: boolean
                  description: Will restrict access to edit page
                collectionIds:
                  type: array
                  description: Collections cannot be added or removed but the order can be updated based on the order of IDs provided in the argument
                  items:
                    type: integer
                cardIds:
                  type: array
                  description: IDs provided will add or remove cards that are not a part of a page collection
                  items:
                    type: integer
                visibility:
                  type: object
                  description: Shares pages with users or groups
                  properties:
                    userIds:
                      type: array
                      description: IDs provided will share page with associated users
                      items:
                        type: integer
                    groupIds:
                      type: array
                      description: IDs provided will share page with associated groups
                      items:
                        type: integer
              required:
                - page_id
    delete:
      summary: Delete a page
      operationId: delete-v1-pages-page_id
      responses:
        '204':
          description: Returns the parameter of success or error based on the page ID being valid.
      description: |-
        Permanently deletes a page from your Domo instance.

        <!-- theme: warning -->
        > #### Warning
        >
        > This is destructive and cannot be reversed.
  /v1/pages:
    get:
      summary: List pages
      tags: []
      responses:
        '200':
          description: Returns all page objects that meet argument criteria from original request.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    children:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          children:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                children:
                                  type: array
                                  items:
                                    type: object
                                    properties: {}
                x-examples:
                  Example 1:
                    - id: 1682608296
                      name: Data Apps
                      children:
                        - id: 1289810845
                          name: Store Location Competitive Analysis
                          children: []
                    - id: 1507324998
                      name: DDX
                      children:
                        - id: 421939226
                          name: Custom Charts
                          children:
                            - id: 420470310
                              name: Chart.js
                              children: []
                            - id: 1897534827
                              name: D3
                              children: []
                            - id: 1855548025
                              name: ECharts
                              children: []
                            - id: 965575609
                              name: Pheonix
                              children: []
                            - id: 779231725
                              name: Plotly
                              children: []
                            - id: 1786821358
                              name: Vega-Lite
                              children: []
                        - id: 171609943
                          name: Custom Filters
                          children: []
                        - id: 421696155
                          name: Custom Maps
                          children:
                            - id: 1174121205
                              name: ArcGIS
                              children: []
                            - id: 151681390
                              name: D3
                              children: []
                            - id: 1029622927
                              name: Mapbox
                              children: []
                            - id: 865628029
                              name: Pheonix
                              children: []
                        - id: 1248531551
                          name: Custom Navigation
                          children:
                            - id: 716038612
                              name: Tabs Navigation
                              children: []
                            - id: 1866197662
                              name: Tree Map Navigation
                              children: []
                        - id: 1379787593
                          name: Custom Text
                          children: []
                        - id: 1576024568
                          name: Data Exploration
                          children: []
                        - id: 1170734417
                          name: Data Input
                          children: []
                        - id: 2089932956
                          name: Generic DDX Templates
                          children: []
                        - id: 998873929
                          name: Images
                          children: []
      operationId: get-v1-pages
      description: Get a list of all pages in your Domo instance.
      parameters:
        - schema:
            type: integer
          in: query
          name: limit
          description: The amount of pages to return in the list. The default is 50 and the maximum is 500.
        - schema:
            type: integer
          in: query
          name: offset
          description: The offset of the page ID to begin list of pages within the response.
    post:
      summary: Create a page
      operationId: post-v1-pages
      responses:
        '200':
          description: Returns a page object when successful.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  parentId:
                    type: integer
                  owners:
                    type: array
                  name:
                    type: string
                  locked:
                    type: boolean
                  cardIds:
                    type: array
                    items:
                      type: integer
                  visibility:
                    type: object
                    properties:
                      userIds:
                        type: array
                        items:
                          type: integer
                      groupIds:
                        type: array
                        items:
                          type: integer
                x-examples:
                  Example 1:
                    id: 3242
                    parentId: 23
                    owners: [{"id":8811501, "type":"USER", "displayName": "John Smith"}]
                    name: Supply Chain
                    locked: true
                    cardIds:
                      - 12
                      - 2535
                      - 233
                      - 694
                    visibility:
                      userIds:
                        - 793
                        - 20
                        - 993
                        - 19234
                      groupIds:
                        - 32
                        - 25
                        - 17
                        - 74
              examples:
                Example 1:
                  value:
                    id: 3242
                    parentId: 23
                    owners: [{"id":8811501, "type":"USER", "displayName": "John Smith"}]
                    name: Supply Chain
                    locked: true
                    cardIds:
                      - 12
                      - 2535
                      - 233
                      - 694
                    visibility:
                      userIds:
                        - 793
                        - 20
                        - 993
                        - 19234
                      groupIds:
                        - 32
                        - 25
                        - 17
                        - 74
      description: Creates a new page in your Domo instance.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  name: Supply Chain
                  parentId: 23
                  locked: 'TRUE'
                  cardIds:
                    - 12
                    - 2535
                    - 233
                    - 694
                  visibility:
                    userIds:
                      - 793
                      - 20
                      - 993
                      - 19234
                    groupIds:
                      - 32
                      - 25
                      - 17
                      - 74
              properties:
                name:
                  type: string
                  description: The name of the page
                parentId:
                  type: integer
                  description: 'If provided, the page will be created as a subpage to the page provided'
                locked:
                  type: boolean
                  description: will restrict other users the ability to make edits to page or its content - the default value is false
                cardIds:
                  type: array
                  description: The IDs of all cards to be added to the page
                  items:
                    type: integer
                visibility:
                  type: object
                  description: Determines the access given to both individual users or groups within Domo
                  properties:
                    userIds:
                      type: array
                      description: The IDs of users that will be given access to view the page
                      items:
                        type: integer
                    groupIds:
                      type: array
                      description: The IDs of groups that will be given access to view the page
                      items:
                        type: integer
            examples:
              Example 1:
                value:
                  name: Supply Chain
                  parentId: 23
                  locked: 'TRUE'
                  cardIds:
                    - 12
                    - 2535
                    - 233
                    - 694
                  visibility:
                    userIds:
                      - 793
                      - 20
                      - 993
                      - 19234
                    groupIds:
                      - 32
                      - 25
                      - 17
                      - 74
  '/v1/pages/{page_id}/collections':
    parameters:
      - schema:
          type: string
        name: page_id
        in: path
        required: true
        description: ID of page that contains the page collection
    get:
      summary: Retrieve a page collection
      tags: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    description:
                      type: string
                    cardIds:
                      type: array
                      items:
                        type: integer
                x-examples:
                  Example 1:
                    - id: 284760742
                      title: 'Executive Pulse: 6 metrics you should check every morning.'
                      description: ''
                      cardIds:
                        - 1349867785
                        - 519660200
                        - 1581963101
                        - 1793085897
                        - 883306279
                        - 2065775735
                    - id: 218043425
                      title: 'Leads and Opportunities: See where most of your prospects are coming from.'
                      description: ''
                      cardIds:
                        - 2142729150
                        - 722896244
                        - 817752006
                        - 417097071
                        - 2126821636
                    - id: 1236388313
                      title: 'Sales: What you can do today to exceed your sales goals.'
                      description: ''
                      cardIds:
                        - 1006593467
                        - 931119744
                        - 659079801
                        - 1885170395
                    - id: 705581826
                      title: 'Sales Reps: Recognize, reward and position your top talent for top performance.'
                      description: ''
                      cardIds:
                        - 563365994
                        - 663359659
                        - 1901443339
                        - 623100687
                        - 1712451993
              examples:
                Example 1:
                  value:
                    - id: 284760742
                      title: 'Executive Pulse: 6 metrics you should check every morning.'
                      description: ''
                      cardIds:
                        - 1349867785
                        - 519660200
                        - 1581963101
                        - 1793085897
                        - 883306279
                        - 2065775735
                    - id: 218043425
                      title: 'Leads and Opportunities: See where most of your prospects are coming from.'
                      description: ''
                      cardIds:
                        - 2142729150
                        - 722896244
                        - 817752006
                        - 417097071
                        - 2126821636
                    - id: 1236388313
                      title: 'Sales: What you can do today to exceed your sales goals.'
                      description: ''
                      cardIds:
                        - 1006593467
                        - 931119744
                        - 659079801
                        - 1885170395
                    - id: 705581826
                      title: 'Sales Reps: Recognize, reward and position your top talent for top performance.'
                      description: ''
                      cardIds:
                        - 563365994
                        - 663359659
                        - 1901443339
                        - 623100687
                        - 1712451993
      operationId: get-v1-pages-PAGE_ID-collections
    post:
      summary: Create a page collection
      operationId: ''
      responses:
        '200':
          description: Returns the parameter of success or error based on the page ID being valid.
      description: ''
      parameters:
        - schema:
            type: string
          in: query
          name: title
          description: Page collection's name displayed above the set of cards
        - schema:
            type: string
          in: query
          name: description
          description: Additional text within the page collection
        - schema:
            type: string
          in: query
          name: cardids
          description: "\tIDs provided will add or remove cards that are not a part of a page collection"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                cardIds:
                  type: array
                  items:
                    type: integer
              x-examples:
                Example 1:
                  title: East Sales
                  description: East Region team  includes all Eastern states.
                  cardIds:
                    - 2535
                    - 233
                    - 694
            examples:
              Example 1:
                value:
                  title: East Sales
                  description: East Region team  includes all Eastern states.
                  cardIds:
                    - 2535
                    - 233
                    - 694
  '/v1/pages/{page_id}/collections/{page_collection_id}':
    parameters:
      - schema:
          type: string
        name: page_id
        in: path
        required: true
      - schema:
          type: string
        name: page_collection_id
        in: path
        required: true
    put:
      summary: Update a page collection
      operationId: put-v1-pages-page_id-collections
      responses:
        '200':
          description: Returns the parameter of success or error based on the page collection ID being valid.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                Example 1:
                  title: East Region Sales Team Funnel
                  description: 'East Region team  includes all the following states: Maine, New Hampshire, Massachusetts, Rhode Island, Connecticut, New York, New Jersey, Delaware, Maryland, Virginia, North Carolina, South Carolina, Georgia, and Florida.'
                  cardIds:
                    - 2535
                    - 233
                    - 12
                    - 884
                    - 694
              properties:
                title:
                  type: string
                  description: Page collection's name displayed above the set of cards
                description:
                  type: string
                  description: Additional text within the page collection
                cardIds:
                  type: array
                  description: IDs provided will add or remove cards that are not a part of a page collection
                  items:
                    type: integer
            examples:
              Example 1:
                value:
                  title: East Region Sales Team Funnel
                  description: 'East Region team  includes all the following states: Maine, New Hampshire, Massachusetts, Rhode Island, Connecticut, New York, New Jersey, Delaware, Maryland, Virginia, North Carolina, South Carolina, Georgia, and Florida.'
                  cardIds:
                    - 2535
                    - 233
                    - 12
                    - 884
                    - 694
    delete:
      summary: Delete a page collection
      operationId: delete-v1-pages-page_id-collections
      responses:
        '204':
          description: |
            Returns the parameter of success or error based on the page collection ID being valid.
      description: |
        Permanently deletes a page collection from your Domo instance.

        <!-- theme: warning -->
        > #### Warning
        >
        > This is destructive and cannot be reversed.
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
